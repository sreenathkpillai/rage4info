version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: care-hub-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: care-resource-hub
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - care-hub-network

  # Backend API Server
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: care-hub-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/care-resource-hub?authSource=admin
      JWT_SECRET: super-secure-jwt-secret-change-in-production
      CLIENT_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
    volumes:
      - ./server/data:/app/data
    networks:
      - care-hub-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:3001/api
    container_name: care-hub-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - care-hub-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (optional - for session storage and caching)
  redis:
    image: redis:7.2-alpine
    container_name: care-hub-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - care-hub-network
    command: redis-server --appendonly yes

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  care-hub-network:
    driver: bridge